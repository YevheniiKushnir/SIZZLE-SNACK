# Generated by Django 4.2.1 on 2023-06-06 15:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Attribute name', max_length=64, verbose_name='Attribute name')),
                ('title_ukr', models.CharField(help_text='Attribute name in Ukrainian', max_length=64, verbose_name='Attribute name (UKR)')),
            ],
            options={
                'verbose_name': 'Attribute',
                'verbose_name_plural': 'Attributes',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Category name', max_length=64, unique=True, verbose_name='Category')),
                ('title_ukr', models.CharField(help_text='Category name in Ukrainian', max_length=64, unique=True, verbose_name='Category (UKR)')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Product name', max_length=128, unique=True, verbose_name='Product name')),
                ('title_ukr', models.CharField(help_text='Product name in Ukrainian', max_length=128, unique=True, verbose_name='Product name (UKR)')),
                ('description', models.TextField(verbose_name='Product description')),
                ('description_ukr', models.TextField(help_text='Product description in Ukrainian', verbose_name='Product description (UKR)')),
                ('price', models.IntegerField(help_text='Product price per 1 unit')),
                ('image_url', models.URLField(help_text='Link to an image of a product', verbose_name='Image URL')),
                ('slug', models.SlugField(help_text='A short label of a product to use in URL', verbose_name='Slug')),
                ('rating', models.SmallIntegerField(help_text='Helps track how popular is a product')),
                ('stock', models.IntegerField(default=1, help_text='Amount of product in stock')),
                ('category', models.ForeignKey(help_text='Category of a product', on_delete=django.db.models.deletion.CASCADE, to='products.category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=128)),
                ('value_ukr', models.CharField(blank=True, help_text='Value of an attribute for a product', max_length=128, verbose_name='Value (UKR)')),
                ('price_addition', models.SmallIntegerField(default=0, help_text='Amount of addition to a end price', verbose_name='Price addition')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.attribute')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_values', to='products.category')),
            ],
            options={
                'verbose_name': 'Attribute Value',
                'verbose_name_plural': 'Attribute Values',
            },
        ),
        migrations.AddField(
            model_name='attribute',
            name='categories',
            field=models.ManyToManyField(related_name='attributes', through='products.AttributeValue', to='products.category'),
        ),
    ]
